{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal[\"default\"].signature : function (a) {\n  return a;\n};\n\nimport { shell } from 'electron';\nimport { APP_TITLE, REPOSITORY } from '../constants';\nimport packageJson from '../../package.json';\nvar MENU = [{\n  label: 'Edit',\n  submenu: [{\n    role: 'undo'\n  }, {\n    role: 'redo'\n  }, {\n    type: 'separator'\n  }, {\n    role: 'cut'\n  }, {\n    role: 'copy'\n  }, {\n    role: 'paste'\n  }, {\n    role: 'pasteandmatchstyle'\n  }, {\n    role: 'delete'\n  }, {\n    role: 'selectall'\n  }]\n}, {\n  label: 'View',\n  submenu: [{\n    role: 'reload'\n  }, {\n    role: 'forcereload'\n  }, {\n    type: 'separator'\n  }, {\n    role: 'resetzoom'\n  }, {\n    role: 'zoomin'\n  }, {\n    role: 'zoomout'\n  }, {\n    role: 'togglefullscreen'\n  }, {\n    type: 'separator'\n  }, {\n    role: 'toggledevtools'\n  }]\n}];\nvar HELP_MENU = {\n  role: 'help',\n  submenu: [{\n    label: \"v\".concat(packageJson.version),\n    enabled: false\n  }, {\n    type: 'separator'\n  }, {\n    label: 'Help / FAQ',\n    click: function click() {\n      shell.openExternal('https://support.mycrypto.com/');\n    }\n  }, {\n    label: 'Report a Bug',\n    click: function click() {\n      shell.openExternal(\"\".concat(REPOSITORY, \"/issues/new\"));\n    }\n  }]\n};\n\nif (process.platform === 'darwin') {\n  MENU.unshift({\n    label: APP_TITLE,\n    submenu: [{\n      role: 'about'\n    }, {\n      type: 'separator'\n    }, {\n      role: 'hide'\n    }, {\n      role: 'hideothers'\n    }, {\n      role: 'unhide'\n    }, {\n      type: 'separator'\n    }, {\n      role: 'quit'\n    }]\n  }); // Modified help menu\n\n  MENU.push(_objectSpread({}, HELP_MENU, {\n    submenu: [].concat(_toConsumableArray(HELP_MENU.submenu), [{\n      label: 'Speech',\n      submenu: [{\n        role: 'startspeaking'\n      }, {\n        role: 'stopspeaking'\n      }]\n    }])\n  }));\n} else {\n  MENU.push(HELP_MENU);\n}\n\nvar _default = MENU;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MENU, \"MENU\", \"/root/MyCrypto/electron-app/main/menu.ts\");\n  reactHotLoader.register(HELP_MENU, \"HELP_MENU\", \"/root/MyCrypto/electron-app/main/menu.ts\");\n  reactHotLoader.register(_default, \"default\", \"/root/MyCrypto/electron-app/main/menu.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}