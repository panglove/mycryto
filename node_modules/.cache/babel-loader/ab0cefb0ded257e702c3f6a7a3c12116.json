{"ast":null,"code":"var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal[\"default\"].signature : function (a) {\n  return a;\n};\n\nimport 'babel-polyfill';\nimport { app, ipcMain, BrowserWindow } from 'electron';\nimport { registerServer } from 'shared/enclave/server';\nimport getWindow from './window'; // Quit application when all windows are closed\n\napp.on('window-all-closed', function () {\n  // On macOS it is common for applications to stay open\n  // until the user explicitly quits\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\napp.on('activate', function () {\n  // On macOS it is common to re-create a window\n  // even after all windows have been closed\n  getWindow();\n}); // Create main BrowserWindow when electron is ready\n\napp.on('ready', function () {\n  getWindow();\n  ipcMain.on('shapeshift-authorize', function (_, url) {\n    var window = new BrowserWindow({\n      backgroundColor: '#fbfbfb',\n      width: 1220,\n      height: process.platform === 'darwin' ? 680 : 720,\n      minWidth: 480,\n      minHeight: 400,\n      titleBarStyle: 'hidden',\n      webPreferences: {\n        devTools: true,\n        nodeIntegration: false,\n        contextIsolation: true\n      }\n    });\n    window.loadURL(url);\n  });\n  ipcMain.on('shapeshift-token-retrieved', function (_, token) {\n    return getWindow().webContents.send('shapeshift-set-token', token);\n  });\n}); // Register enclave protocol\n\nregisterServer(app);","map":null,"metadata":{},"sourceType":"module"}