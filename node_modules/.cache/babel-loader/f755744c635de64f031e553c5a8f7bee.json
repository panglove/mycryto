{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal[\"default\"].signature : function (a) {\n  return a;\n};\n\nvar _default = JSON.stringify({\n  \"package\": null,\n  messages: [{\n    name: 'MultisigRedeemScriptType',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'HDNodePathType',\n      name: 'pubkeys',\n      id: 1\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'bytes',\n      name: 'signatures',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'm',\n      id: 3\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'HDNodeType',\n      name: 'nodes',\n      id: 4\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 5\n    }],\n    enums: [],\n    messages: [{\n      name: 'HDNodePathType',\n      fields: [{\n        rule: 'required',\n        options: {},\n        type: 'HDNodeType',\n        name: 'node',\n        id: 1\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'address_n',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'GetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'ecdsa_curve_name',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'Bitcoin'\n      },\n      type: 'string',\n      name: 'coin_name',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'SPENDADDRESS'\n      },\n      type: 'InputScriptType',\n      name: 'script_type',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PublicKey',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'HDNodeType',\n      name: 'node',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'xpub',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'GetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'Bitcoin'\n      },\n      type: 'string',\n      name: 'coin_name',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MultisigRedeemScriptType',\n      name: 'multisig',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'SPENDADDRESS'\n      },\n      type: 'InputScriptType',\n      name: 'script_type',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Address',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'SignMessage',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'required',\n      options: {},\n      type: 'bytes',\n      name: 'message',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'Bitcoin'\n      },\n      type: 'string',\n      name: 'coin_name',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'SPENDADDRESS'\n      },\n      type: 'InputScriptType',\n      name: 'script_type',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MessageSignature',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'VerifyMessage',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'message',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'Bitcoin'\n      },\n      type: 'string',\n      name: 'coin_name',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'SignTx',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'uint32',\n      name: 'outputs_count',\n      id: 1\n    }, {\n      rule: 'required',\n      options: {},\n      type: 'uint32',\n      name: 'inputs_count',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'Bitcoin'\n      },\n      type: 'string',\n      name: 'coin_name',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 1\n      },\n      type: 'uint32',\n      name: 'version',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 0\n      },\n      type: 'uint32',\n      name: 'lock_time',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'expiry',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'overwintered',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'version_group_id',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'timestamp',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'branch_id',\n      id: 10\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TxRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'RequestType',\n      name: 'request_type',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TxRequestDetailsType',\n      name: 'details',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TxRequestSerializedType',\n      name: 'serialized',\n      id: 3\n    }],\n    enums: [{\n      name: 'RequestType',\n      values: [{\n        name: 'TXINPUT',\n        id: 0\n      }, {\n        name: 'TXOUTPUT',\n        id: 1\n      }, {\n        name: 'TXMETA',\n        id: 2\n      }, {\n        name: 'TXFINISHED',\n        id: 3\n      }, {\n        name: 'TXEXTRADATA',\n        id: 4\n      }],\n      options: {}\n    }],\n    messages: [{\n      name: 'TxRequestDetailsType',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'request_index',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'tx_hash',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'extra_data_len',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'extra_data_offset',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'TxRequestSerializedType',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'signature_index',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'signature',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'serialized_tx',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TxAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'TransactionType',\n      name: 'tx',\n      id: 1\n    }],\n    enums: [],\n    messages: [{\n      name: 'TransactionType',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'version',\n        id: 1\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'TxInputType',\n        name: 'inputs',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'TxOutputBinType',\n        name: 'bin_outputs',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'lock_time',\n        id: 4\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'TxOutputType',\n        name: 'outputs',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'inputs_cnt',\n        id: 6\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'outputs_cnt',\n        id: 7\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'extra_data',\n        id: 8\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'extra_data_len',\n        id: 9\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'expiry',\n        id: 10\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bool',\n        name: 'overwintered',\n        id: 11\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'version_group_id',\n        id: 12\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'timestamp',\n        id: 13\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'branch_id',\n        id: 14\n      }],\n      enums: [],\n      messages: [{\n        name: 'TxInputType',\n        fields: [{\n          rule: 'repeated',\n          options: {},\n          type: 'uint32',\n          name: 'address_n',\n          id: 1\n        }, {\n          rule: 'required',\n          options: {},\n          type: 'bytes',\n          name: 'prev_hash',\n          id: 2\n        }, {\n          rule: 'required',\n          options: {},\n          type: 'uint32',\n          name: 'prev_index',\n          id: 3\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'script_sig',\n          id: 4\n        }, {\n          rule: 'optional',\n          options: {\n            \"default\": 4294967295\n          },\n          type: 'uint32',\n          name: 'sequence',\n          id: 5\n        }, {\n          rule: 'optional',\n          options: {\n            \"default\": 'SPENDADDRESS'\n          },\n          type: 'InputScriptType',\n          name: 'script_type',\n          id: 6\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'MultisigRedeemScriptType',\n          name: 'multisig',\n          id: 7\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'amount',\n          id: 8\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'decred_tree',\n          id: 9\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'decred_script_version',\n          id: 10\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'prev_block_hash_bip115',\n          id: 11\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'prev_block_height_bip115',\n          id: 12\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TxOutputBinType',\n        fields: [{\n          rule: 'required',\n          options: {},\n          type: 'uint64',\n          name: 'amount',\n          id: 1\n        }, {\n          rule: 'required',\n          options: {},\n          type: 'bytes',\n          name: 'script_pubkey',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'decred_script_version',\n          id: 3\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TxOutputType',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'address',\n          id: 1\n        }, {\n          rule: 'repeated',\n          options: {},\n          type: 'uint32',\n          name: 'address_n',\n          id: 2\n        }, {\n          rule: 'required',\n          options: {},\n          type: 'uint64',\n          name: 'amount',\n          id: 3\n        }, {\n          rule: 'required',\n          options: {},\n          type: 'OutputScriptType',\n          name: 'script_type',\n          id: 4\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'MultisigRedeemScriptType',\n          name: 'multisig',\n          id: 5\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'op_return_data',\n          id: 6\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'decred_script_version',\n          id: 7\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'block_hash_bip115',\n          id: 8\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'block_height_bip115',\n          id: 9\n        }],\n        enums: [{\n          name: 'OutputScriptType',\n          values: [{\n            name: 'PAYTOADDRESS',\n            id: 0\n          }, {\n            name: 'PAYTOSCRIPTHASH',\n            id: 1\n          }, {\n            name: 'PAYTOMULTISIG',\n            id: 2\n          }, {\n            name: 'PAYTOOPRETURN',\n            id: 3\n          }, {\n            name: 'PAYTOWITNESS',\n            id: 4\n          }, {\n            name: 'PAYTOP2SHWITNESS',\n            id: 5\n          }],\n          options: {}\n        }],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'FirmwareErase',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'length',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'FirmwareRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'offset',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'length',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'FirmwareUpload',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'hash',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'SelfTest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoGetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoPublicKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'xpub',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'HDNodeType',\n      name: 'node',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'CardanoTxInputType',\n      name: 'inputs',\n      id: 1\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'CardanoTxOutputType',\n      name: 'outputs',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'transactions_count',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'protocol_magic',\n      id: 5\n    }],\n    enums: [],\n    messages: [{\n      name: 'CardanoTxInputType',\n      fields: [{\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'address_n',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'prev_hash',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'prev_index',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'type',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'CardanoTxOutputType',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'address',\n        id: 1\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'address_n',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'amount',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoTxRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'tx_index',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_hash',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_body',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoTxAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'transaction',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CardanoSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_hash',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_body',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Success',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'message',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Failure',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'FailureType',\n      name: 'code',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'message',\n      id: 2\n    }],\n    enums: [{\n      name: 'FailureType',\n      values: [{\n        name: 'Failure_UnexpectedMessage',\n        id: 1\n      }, {\n        name: 'Failure_ButtonExpected',\n        id: 2\n      }, {\n        name: 'Failure_DataError',\n        id: 3\n      }, {\n        name: 'Failure_ActionCancelled',\n        id: 4\n      }, {\n        name: 'Failure_PinExpected',\n        id: 5\n      }, {\n        name: 'Failure_PinCancelled',\n        id: 6\n      }, {\n        name: 'Failure_PinInvalid',\n        id: 7\n      }, {\n        name: 'Failure_InvalidSignature',\n        id: 8\n      }, {\n        name: 'Failure_ProcessError',\n        id: 9\n      }, {\n        name: 'Failure_NotEnoughFunds',\n        id: 10\n      }, {\n        name: 'Failure_NotInitialized',\n        id: 11\n      }, {\n        name: 'Failure_PinMismatch',\n        id: 12\n      }, {\n        name: 'Failure_FirmwareError',\n        id: 99\n      }],\n      options: {}\n    }],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ButtonRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'ButtonRequestType',\n      name: 'code',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'data',\n      id: 2\n    }],\n    enums: [{\n      name: 'ButtonRequestType',\n      values: [{\n        name: 'ButtonRequest_Other',\n        id: 1\n      }, {\n        name: 'ButtonRequest_FeeOverThreshold',\n        id: 2\n      }, {\n        name: 'ButtonRequest_ConfirmOutput',\n        id: 3\n      }, {\n        name: 'ButtonRequest_ResetDevice',\n        id: 4\n      }, {\n        name: 'ButtonRequest_ConfirmWord',\n        id: 5\n      }, {\n        name: 'ButtonRequest_WipeDevice',\n        id: 6\n      }, {\n        name: 'ButtonRequest_ProtectCall',\n        id: 7\n      }, {\n        name: 'ButtonRequest_SignTx',\n        id: 8\n      }, {\n        name: 'ButtonRequest_FirmwareCheck',\n        id: 9\n      }, {\n        name: 'ButtonRequest_Address',\n        id: 10\n      }, {\n        name: 'ButtonRequest_PublicKey',\n        id: 11\n      }, {\n        name: 'ButtonRequest_MnemonicWordCount',\n        id: 12\n      }, {\n        name: 'ButtonRequest_MnemonicInput',\n        id: 13\n      }, {\n        name: 'ButtonRequest_PassphraseType',\n        id: 14\n      }, {\n        name: 'ButtonRequest_UnknownDerivationPath',\n        id: 15\n      }],\n      options: {}\n    }],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ButtonAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PinMatrixRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'PinMatrixRequestType',\n      name: 'type',\n      id: 1\n    }],\n    enums: [{\n      name: 'PinMatrixRequestType',\n      values: [{\n        name: 'PinMatrixRequestType_Current',\n        id: 1\n      }, {\n        name: 'PinMatrixRequestType_NewFirst',\n        id: 2\n      }, {\n        name: 'PinMatrixRequestType_NewSecond',\n        id: 3\n      }],\n      options: {}\n    }],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PinMatrixAck',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'string',\n      name: 'pin',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PassphraseRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'on_device',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PassphraseAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'passphrase',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'state',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PassphraseStateRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'state',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'PassphraseStateAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'HDNodeType',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'uint32',\n      name: 'depth',\n      id: 1\n    }, {\n      rule: 'required',\n      options: {},\n      type: 'uint32',\n      name: 'fingerprint',\n      id: 2\n    }, {\n      rule: 'required',\n      options: {},\n      type: 'uint32',\n      name: 'child_num',\n      id: 3\n    }, {\n      rule: 'required',\n      options: {},\n      type: 'bytes',\n      name: 'chain_code',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'private_key',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CipherKeyValue',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'key',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'value',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'encrypt',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'ask_on_encrypt',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'ask_on_decrypt',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'iv',\n      id: 7\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CipheredKeyValue',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'value',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'IdentityType',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'proto',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'user',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'host',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'port',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'path',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 0\n      },\n      type: 'uint32',\n      name: 'index',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'SignIdentity',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'IdentityType',\n      name: 'identity',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'challenge_hidden',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'challenge_visual',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'ecdsa_curve_name',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'SignedIdentity',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'GetECDHSessionKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'IdentityType',\n      name: 'identity',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'peer_public_key',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'ecdsa_curve_name',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ECDHSessionKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'session_key',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CosiCommit',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CosiCommitment',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'commitment',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pubkey',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CosiSign',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'global_commitment',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'global_pubkey',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'CosiSignature',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkDecision',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'yes_no',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'up_down',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'input',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkGetState',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkState',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'layout',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'pin',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'matrix',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'mnemonic',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'HDNodeType',\n      name: 'node',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_protection',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'reset_word',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'reset_entropy',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'recovery_fake_word',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'recovery_word_pos',\n      id: 10\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'reset_word_pos',\n      id: 11\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkStop',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkLog',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'level',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'bucket',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'text',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkMemoryRead',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'address',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'length',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkMemory',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'memory',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkMemoryWrite',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'address',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'memory',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'flash',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugLinkFlashErase',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'sector',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EosGetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EosPublicKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'wif_public_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'raw_public_key',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EosSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'chain_id',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosTxHeader',\n      name: 'header',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'num_actions',\n      id: 4\n    }],\n    enums: [],\n    messages: [{\n      name: 'EosTxHeader',\n      fields: [{\n        rule: 'required',\n        options: {},\n        type: 'uint32',\n        name: 'expiration',\n        id: 1\n      }, {\n        rule: 'required',\n        options: {},\n        type: 'uint32',\n        name: 'ref_block_num',\n        id: 2\n      }, {\n        rule: 'required',\n        options: {},\n        type: 'uint32',\n        name: 'ref_block_prefix',\n        id: 3\n      }, {\n        rule: 'required',\n        options: {},\n        type: 'uint32',\n        name: 'max_net_usage_words',\n        id: 4\n      }, {\n        rule: 'required',\n        options: {},\n        type: 'uint32',\n        name: 'max_cpu_usage_ms',\n        id: 5\n      }, {\n        rule: 'required',\n        options: {},\n        type: 'uint32',\n        name: 'delay_sec',\n        id: 6\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EosTxActionRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'data_size',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EosTxActionAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'EosActionCommon',\n      name: 'common',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionTransfer',\n      name: 'transfer',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionDelegate',\n      name: 'delegate',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionUndelegate',\n      name: 'undelegate',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionRefund',\n      name: 'refund',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionBuyRam',\n      name: 'buy_ram',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionBuyRamBytes',\n      name: 'buy_ram_bytes',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionSellRam',\n      name: 'sell_ram',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionVoteProducer',\n      name: 'vote_producer',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionUpdateAuth',\n      name: 'update_auth',\n      id: 10\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionDeleteAuth',\n      name: 'delete_auth',\n      id: 11\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionLinkAuth',\n      name: 'link_auth',\n      id: 12\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionUnlinkAuth',\n      name: 'unlink_auth',\n      id: 13\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionNewAccount',\n      name: 'new_account',\n      id: 14\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'EosActionUnknown',\n      name: 'unknown',\n      id: 15\n    }],\n    enums: [],\n    messages: [{\n      name: 'EosAsset',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'sint64',\n        name: 'amount',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'symbol',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosPermissionLevel',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'actor',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'permission',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosAuthorizationKey',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'type',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'key',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'address_n',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'weight',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosAuthorizationAccount',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'EosPermissionLevel',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'weight',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosAuthorizationWait',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'wait_sec',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'weight',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosAuthorization',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'threshold',\n        id: 1\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'EosAuthorizationKey',\n        name: 'keys',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'EosAuthorizationAccount',\n        name: 'accounts',\n        id: 3\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'EosAuthorizationWait',\n        name: 'waits',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionCommon',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'name',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'EosPermissionLevel',\n        name: 'authorization',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionTransfer',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'sender',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'receiver',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAsset',\n        name: 'quantity',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'memo',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionDelegate',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'sender',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'receiver',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAsset',\n        name: 'net_quantity',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAsset',\n        name: 'cpu_quantity',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bool',\n        name: 'transfer',\n        id: 5\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionUndelegate',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'sender',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'receiver',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAsset',\n        name: 'net_quantity',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAsset',\n        name: 'cpu_quantity',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionRefund',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'owner',\n        id: 1\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionBuyRam',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'payer',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'receiver',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAsset',\n        name: 'quantity',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionBuyRamBytes',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'payer',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'receiver',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'bytes',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionSellRam',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'bytes',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionVoteProducer',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'voter',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'proxy',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint64',\n        name: 'producers',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionUpdateAuth',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'permission',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'parent',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAuthorization',\n        name: 'auth',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionDeleteAuth',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'permission',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionLinkAuth',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'code',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'type',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'requirement',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionUnlinkAuth',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'code',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'type',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionNewAccount',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'creator',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'name',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAuthorization',\n        name: 'owner',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'EosAuthorization',\n        name: 'active',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'EosActionUnknown',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'data_size',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'data_chunk',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EosSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'signature_v',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature_r',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature_s',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumGetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumPublicKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'HDNodeType',\n      name: 'node',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'xpub',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'nonce',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'gas_price',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'gas_limit',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'to',\n      id: 11\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'value',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data_initial_chunk',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'data_length',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'chain_id',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'tx_type',\n      id: 10\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumTxRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'data_length',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'signature_v',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature_r',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature_s',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumTxAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data_chunk',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumSignMessage',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'message',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumMessageSignature',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EthereumVerifyMessage',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'message',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskGetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskPublicKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'LiskTransactionCommon',\n      name: 'transaction',\n      id: 2\n    }],\n    enums: [],\n    messages: [{\n      name: 'LiskTransactionCommon',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'LiskTransactionType',\n        name: 'type',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {\n          \"default\": 0\n        },\n        type: 'uint64',\n        name: 'amount',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'recipient_id',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'sender_public_key',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'requester_public_key',\n        id: 6\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'signature',\n        id: 7\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'timestamp',\n        id: 8\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'LiskTransactionAsset',\n        name: 'asset',\n        id: 9\n      }],\n      enums: [{\n        name: 'LiskTransactionType',\n        values: [{\n          name: 'Transfer',\n          id: 0\n        }, {\n          name: 'RegisterSecondPassphrase',\n          id: 1\n        }, {\n          name: 'RegisterDelegate',\n          id: 2\n        }, {\n          name: 'CastVotes',\n          id: 3\n        }, {\n          name: 'RegisterMultisignatureAccount',\n          id: 4\n        }, {\n          name: 'CreateDapp',\n          id: 5\n        }, {\n          name: 'TransferIntoDapp',\n          id: 6\n        }, {\n          name: 'TransferOutOfDapp',\n          id: 7\n        }],\n        options: {}\n      }],\n      messages: [{\n        name: 'LiskTransactionAsset',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'LiskSignatureType',\n          name: 'signature',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'LiskDelegateType',\n          name: 'delegate',\n          id: 2\n        }, {\n          rule: 'repeated',\n          options: {},\n          type: 'string',\n          name: 'votes',\n          id: 3\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'LiskMultisignatureType',\n          name: 'multisignature',\n          id: 4\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'data',\n          id: 5\n        }],\n        enums: [],\n        messages: [{\n          name: 'LiskSignatureType',\n          fields: [{\n            rule: 'optional',\n            options: {},\n            type: 'bytes',\n            name: 'public_key',\n            id: 1\n          }],\n          enums: [],\n          messages: [],\n          options: {},\n          oneofs: {}\n        }, {\n          name: 'LiskDelegateType',\n          fields: [{\n            rule: 'optional',\n            options: {},\n            type: 'string',\n            name: 'username',\n            id: 1\n          }],\n          enums: [],\n          messages: [],\n          options: {},\n          oneofs: {}\n        }, {\n          name: 'LiskMultisignatureType',\n          fields: [{\n            rule: 'optional',\n            options: {},\n            type: 'uint32',\n            name: 'min',\n            id: 1\n          }, {\n            rule: 'optional',\n            options: {},\n            type: 'uint32',\n            name: 'life_time',\n            id: 2\n          }, {\n            rule: 'repeated',\n            options: {},\n            type: 'string',\n            name: 'keys_group',\n            id: 3\n          }],\n          enums: [],\n          messages: [],\n          options: {},\n          oneofs: {}\n        }],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskSignMessage',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'message',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskMessageSignature',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LiskVerifyMessage',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'message',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Initialize',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'state',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'skip_passphrase',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'GetFeatures',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Features',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'vendor',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'major_version',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'minor_version',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'patch_version',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'bootloader_mode',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'device_id',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'pin_protection',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_protection',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'language',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'label',\n      id: 10\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'initialized',\n      id: 12\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'revision',\n      id: 13\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'bootloader_hash',\n      id: 14\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'imported',\n      id: 15\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'pin_cached',\n      id: 16\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_cached',\n      id: 17\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'firmware_present',\n      id: 18\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'needs_backup',\n      id: 19\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'flags',\n      id: 20\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'model',\n      id: 21\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'fw_major',\n      id: 22\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'fw_minor',\n      id: 23\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'fw_patch',\n      id: 24\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'fw_vendor',\n      id: 25\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'fw_vendor_keys',\n      id: 26\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'unfinished_backup',\n      id: 27\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'no_backup',\n      id: 28\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ClearSession',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ApplySettings',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'language',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'label',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'use_passphrase',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'homescreen',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'PassphraseSourceType',\n      name: 'passphrase_source',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'auto_lock_delay_ms',\n      id: 6\n    }],\n    enums: [{\n      name: 'PassphraseSourceType',\n      values: [{\n        name: 'ASK',\n        id: 0\n      }, {\n        name: 'DEVICE',\n        id: 1\n      }, {\n        name: 'HOST',\n        id: 2\n      }],\n      options: {}\n    }],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ApplyFlags',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'flags',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ChangePin',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'remove',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Ping',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'message',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'button_protection',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'pin_protection',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_protection',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Cancel',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'GetEntropy',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'uint32',\n      name: 'size',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'Entropy',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'bytes',\n      name: 'entropy',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'WipeDevice',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'LoadDevice',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'mnemonic',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'HDNodeType',\n      name: 'node',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'pin',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_protection',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'english'\n      },\n      type: 'string',\n      name: 'language',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'label',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'skip_checksum',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'u2f_counter',\n      id: 8\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'ResetDevice',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'display_random',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 256\n      },\n      type: 'uint32',\n      name: 'strength',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_protection',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'pin_protection',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'english'\n      },\n      type: 'string',\n      name: 'language',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'label',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'u2f_counter',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'skip_backup',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'no_backup',\n      id: 9\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'BackupDevice',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EntropyRequest',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'EntropyAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'entropy',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'RecoveryDevice',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'word_count',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'passphrase_protection',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'pin_protection',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {\n        \"default\": 'english'\n      },\n      type: 'string',\n      name: 'language',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'label',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'enforce_wordlist',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'RecoveryDeviceType',\n      name: 'type',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'u2f_counter',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'dry_run',\n      id: 10\n    }],\n    enums: [{\n      name: 'RecoveryDeviceType',\n      values: [{\n        name: 'RecoveryDeviceType_ScrambledWords',\n        id: 0\n      }, {\n        name: 'RecoveryDeviceType_Matrix',\n        id: 1\n      }],\n      options: {}\n    }],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'WordRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'WordRequestType',\n      name: 'type',\n      id: 1\n    }],\n    enums: [{\n      name: 'WordRequestType',\n      values: [{\n        name: 'WordRequestType_Plain',\n        id: 0\n      }, {\n        name: 'WordRequestType_Matrix9',\n        id: 1\n      }, {\n        name: 'WordRequestType_Matrix6',\n        id: 2\n      }],\n      options: {}\n    }],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'WordAck',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'string',\n      name: 'word',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'SetU2FCounter',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'u2f_counter',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSourceEntry',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'MoneroOutputEntry',\n      name: 'outputs',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'real_output',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'real_out_tx_key',\n      id: 3\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'bytes',\n      name: 'real_out_additional_tx_keys',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'real_output_in_tx_index',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'amount',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'rct',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'mask',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroMultisigKLRki',\n      name: 'multisig_kLRki',\n      id: 9\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroOutputEntry',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'idx',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'MoneroRctKeyPublic',\n        name: 'key',\n        id: 2\n      }],\n      enums: [],\n      messages: [{\n        name: 'MoneroRctKeyPublic',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'dest',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'commitment',\n          id: 2\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'MoneroMultisigKLRki',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'K',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'L',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'R',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'ki',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionDestinationEntry',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'amount',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroAccountPublicAddress',\n      name: 'addr',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'is_subaddress',\n      id: 3\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroAccountPublicAddress',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'spend_public_key',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'view_public_key',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionRsigData',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'rsig_type',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'offload_type',\n      id: 2\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'uint64',\n      name: 'grouping',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'mask',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'rsig',\n      id: 5\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'bytes',\n      name: 'rsig_parts',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network_type',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'account',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'minor',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroGetWatchKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network_type',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroWatchKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'watch_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'address',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionInitRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'version',\n      id: 1\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network_type',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionData',\n      name: 'tsx_data',\n      id: 4\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroTransactionData',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'version',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'payment_id',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'unlock_time',\n        id: 3\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'MoneroTransactionDestinationEntry',\n        name: 'outputs',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'MoneroTransactionDestinationEntry',\n        name: 'change_dts',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'num_inputs',\n        id: 6\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'mixin',\n        id: 7\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 8\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'account',\n        id: 9\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'minor_indices',\n        id: 10\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'MoneroTransactionRsigData',\n        name: 'rsig_data',\n        id: 11\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'integrated_indices',\n        id: 12\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionInitAck',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'bytes',\n      name: 'hmacs',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionRsigData',\n      name: 'rsig_data',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSetInputRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionSourceEntry',\n      name: 'src_entr',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSetInputAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vini',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vini_hmac',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out_hmac',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out_alpha',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'spend_key',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionInputsPermutationRequest',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'perm',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionInputsPermutationAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionInputViniRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionSourceEntry',\n      name: 'src_entr',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vini',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vini_hmac',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out_hmac',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionInputViniAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionAllInputsSetRequest',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionAllInputsSetAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionRsigData',\n      name: 'rsig_data',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSetOutputRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionDestinationEntry',\n      name: 'dst_entr',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'dst_entr_hmac',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionRsigData',\n      name: 'rsig_data',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSetOutputAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_out',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vouti_hmac',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionRsigData',\n      name: 'rsig_data',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'out_pk',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'ecdh_info',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionAllOutSetRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionRsigData',\n      name: 'rsig_data',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionAllOutSetAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'extra',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_prefix_hash',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'MoneroRingCtSig',\n      name: 'rv',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'full_message_hash',\n      id: 5\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroRingCtSig',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'txn_fee',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'message',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'rv_type',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSignInputRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'MoneroTransactionSourceEntry',\n      name: 'src_entr',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vini',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'vini_hmac',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out_hmac',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'pseudo_out_alpha',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'spend_key',\n      id: 7\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionSignInputAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionFinalRequest',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroTransactionFinalAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'cout_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'salt',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'rand_mult',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_enc_keys',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroKeyImageExportInitRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'num',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'hash',\n      id: 2\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network_type',\n      id: 4\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'MoneroSubAddressIndicesList',\n      name: 'subs',\n      id: 5\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroSubAddressIndicesList',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'account',\n        id: 1\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'minor_indices',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroKeyImageExportInitAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroKeyImageSyncStepRequest',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'MoneroTransferDetails',\n      name: 'tdis',\n      id: 1\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroTransferDetails',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'out_key',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'tx_pub_key',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'bytes',\n        name: 'additional_tx_pub_keys',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'internal_output_index',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroKeyImageSyncStepAck',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'MoneroExportedKeyImage',\n      name: 'kis',\n      id: 1\n    }],\n    enums: [],\n    messages: [{\n      name: 'MoneroExportedKeyImage',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'iv',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'blob',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroKeyImageSyncFinalRequest',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroKeyImageSyncFinalAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'enc_key',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroGetTxKeyRequest',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network_type',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'salt1',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'salt2',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_enc_keys',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_prefix_hash',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'reason',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'view_public_key',\n      id: 8\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroGetTxKeyAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'salt',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_keys',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'tx_derivations',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroLiveRefreshStartRequest',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network_type',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroLiveRefreshStartAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroLiveRefreshStepRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'out_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'recv_deriv',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'real_out_idx',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'sub_addr_major',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'sub_addr_minor',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroLiveRefreshStepAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'salt',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'key_image',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroLiveRefreshFinalRequest',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'MoneroLiveRefreshFinalAck',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugMoneroDiagRequest',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'ins',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'p1',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'p2',\n      id: 3\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'uint64',\n      name: 'pd',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data1',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data2',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'DebugMoneroDiagAck',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'ins',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'p1',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'p2',\n      id: 3\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'uint64',\n      name: 'pd',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data1',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data2',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'NEMGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'NEMAddress',\n    fields: [{\n      rule: 'required',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'NEMSignTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'NEMTransactionCommon',\n      name: 'transaction',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMTransactionCommon',\n      name: 'multisig',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMTransfer',\n      name: 'transfer',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'cosigning',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMProvisionNamespace',\n      name: 'provision_namespace',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMMosaicCreation',\n      name: 'mosaic_creation',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMMosaicSupplyChange',\n      name: 'supply_change',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMAggregateModification',\n      name: 'aggregate_modification',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'NEMImportanceTransfer',\n      name: 'importance_transfer',\n      id: 9\n    }],\n    enums: [],\n    messages: [{\n      name: 'NEMTransactionCommon',\n      fields: [{\n        rule: 'repeated',\n        options: {},\n        type: 'uint32',\n        name: 'address_n',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'network',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'timestamp',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'deadline',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'signer',\n        id: 6\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'NEMTransfer',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'recipient',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'amount',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'payload',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'public_key',\n        id: 4\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'NEMMosaic',\n        name: 'mosaics',\n        id: 5\n      }],\n      enums: [],\n      messages: [{\n        name: 'NEMMosaic',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'namespace',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'mosaic',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'quantity',\n          id: 3\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'NEMProvisionNamespace',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'namespace',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'parent',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'sink',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 4\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'NEMMosaicCreation',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'NEMMosaicDefinition',\n        name: 'definition',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'sink',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 3\n      }],\n      enums: [],\n      messages: [{\n        name: 'NEMMosaicDefinition',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'name',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'ticker',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'namespace',\n          id: 3\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'mosaic',\n          id: 4\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'divisibility',\n          id: 5\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'NEMMosaicLevy',\n          name: 'levy',\n          id: 6\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'fee',\n          id: 7\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'levy_address',\n          id: 8\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'levy_namespace',\n          id: 9\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'levy_mosaic',\n          id: 10\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'supply',\n          id: 11\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bool',\n          name: 'mutable_supply',\n          id: 12\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bool',\n          name: 'transferable',\n          id: 13\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'description',\n          id: 14\n        }, {\n          rule: 'repeated',\n          options: {},\n          type: 'uint32',\n          name: 'networks',\n          id: 15\n        }],\n        enums: [{\n          name: 'NEMMosaicLevy',\n          values: [{\n            name: 'MosaicLevy_Absolute',\n            id: 1\n          }, {\n            name: 'MosaicLevy_Percentile',\n            id: 2\n          }],\n          options: {}\n        }],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'NEMMosaicSupplyChange',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'namespace',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'mosaic',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'NEMSupplyChangeType',\n        name: 'type',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'delta',\n        id: 4\n      }],\n      enums: [{\n        name: 'NEMSupplyChangeType',\n        values: [{\n          name: 'SupplyChange_Increase',\n          id: 1\n        }, {\n          name: 'SupplyChange_Decrease',\n          id: 2\n        }],\n        options: {}\n      }],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'NEMAggregateModification',\n      fields: [{\n        rule: 'repeated',\n        options: {},\n        type: 'NEMCosignatoryModification',\n        name: 'modifications',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'sint32',\n        name: 'relative_change',\n        id: 2\n      }],\n      enums: [],\n      messages: [{\n        name: 'NEMCosignatoryModification',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'NEMModificationType',\n          name: 'type',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'public_key',\n          id: 2\n        }],\n        enums: [{\n          name: 'NEMModificationType',\n          values: [{\n            name: 'CosignatoryModification_Add',\n            id: 1\n          }, {\n            name: 'CosignatoryModification_Delete',\n            id: 2\n          }],\n          options: {}\n        }],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'NEMImportanceTransfer',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'NEMImportanceTransferMode',\n        name: 'mode',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'public_key',\n        id: 2\n      }],\n      enums: [{\n        name: 'NEMImportanceTransferMode',\n        values: [{\n          name: 'ImportanceTransfer_Activate',\n          id: 1\n        }, {\n          name: 'ImportanceTransfer_Deactivate',\n          id: 2\n        }],\n        options: {}\n      }],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'NEMSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'data',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'NEMDecryptMessage',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'network',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'NEMDecryptedMessage',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologyTransaction',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'version',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'type',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'nonce',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'gas_price',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'gas_limit',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'payer',\n      id: 6\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'OntologyTxAttribute',\n      name: 'tx_attributes',\n      id: 7\n    }],\n    enums: [],\n    messages: [{\n      name: 'OntologyTxAttribute',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'usage',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'data',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologyGetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologyPublicKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologyGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologyAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignTransfer',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyTransaction',\n      name: 'transaction',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyTransfer',\n      name: 'transfer',\n      id: 3\n    }],\n    enums: [],\n    messages: [{\n      name: 'OntologyTransfer',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'OntologyAsset',\n        name: 'asset',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'amount',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'from_address',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'to_address',\n        id: 4\n      }],\n      enums: [{\n        name: 'OntologyAsset',\n        values: [{\n          name: 'ONT',\n          id: 1\n        }, {\n          name: 'ONG',\n          id: 2\n        }],\n        options: {}\n      }],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignedTransfer',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignWithdrawOng',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyTransaction',\n      name: 'transaction',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyWithdrawOng',\n      name: 'withdraw_ong',\n      id: 3\n    }],\n    enums: [],\n    messages: [{\n      name: 'OntologyWithdrawOng',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'amount',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'from_address',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'to_address',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignedWithdrawOng',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignOntIdRegister',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyTransaction',\n      name: 'transaction',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyOntIdRegister',\n      name: 'ont_id_register',\n      id: 3\n    }],\n    enums: [],\n    messages: [{\n      name: 'OntologyOntIdRegister',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'ont_id',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'public_key',\n        id: 2\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignedOntIdRegister',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignOntIdAddAttributes',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyTransaction',\n      name: 'transaction',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'OntologyOntIdAddAttributes',\n      name: 'ont_id_add_attributes',\n      id: 3\n    }],\n    enums: [],\n    messages: [{\n      name: 'OntologyOntIdAddAttributes',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'ont_id',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'public_key',\n        id: 2\n      }, {\n        rule: 'repeated',\n        options: {},\n        type: 'OntologyOntIdAttribute',\n        name: 'ont_id_attributes',\n        id: 3\n      }],\n      enums: [],\n      messages: [{\n        name: 'OntologyOntIdAttribute',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'key',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'type',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'value',\n          id: 3\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'OntologySignedOntIdAddAttributes',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'payload',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'RippleGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'RippleAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'RippleSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'fee',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'flags',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'sequence',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'last_ledger_sequence',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'RipplePayment',\n      name: 'payment',\n      id: 6\n    }],\n    enums: [],\n    messages: [{\n      name: 'RipplePayment',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'amount',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'string',\n        name: 'destination',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint32',\n        name: 'destination_tag',\n        id: 3\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'RippleSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'serialized_tx',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarAssetType',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'type',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'code',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'issuer',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'network_passphrase',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'fee',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'sequence_number',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'timebounds_start',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'timebounds_end',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'memo_type',\n      id: 10\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'memo_text',\n      id: 11\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'memo_id',\n      id: 12\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'memo_hash',\n      id: 13\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'num_operations',\n      id: 14\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarTxOpRequest',\n    fields: [],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarPaymentOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'destination_account',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'asset',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'sint64',\n      name: 'amount',\n      id: 4\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarCreateAccountOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'new_account',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'sint64',\n      name: 'starting_balance',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarPathPaymentOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'send_asset',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'sint64',\n      name: 'send_max',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'destination_account',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'destination_asset',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'sint64',\n      name: 'destination_amount',\n      id: 6\n    }, {\n      rule: 'repeated',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'paths',\n      id: 7\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarManageOfferOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'selling_asset',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'buying_asset',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'sint64',\n      name: 'amount',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'price_n',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'price_d',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'offer_id',\n      id: 7\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarCreatePassiveOfferOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'selling_asset',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'buying_asset',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'sint64',\n      name: 'amount',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'price_n',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'price_d',\n      id: 6\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarSetOptionsOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'inflation_destination_account',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'clear_flags',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'set_flags',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'master_weight',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'low_threshold',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'medium_threshold',\n      id: 7\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'high_threshold',\n      id: 8\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'home_domain',\n      id: 9\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'signer_type',\n      id: 10\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signer_key',\n      id: 11\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'signer_weight',\n      id: 12\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarChangeTrustOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'StellarAssetType',\n      name: 'asset',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'limit',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarAllowTrustOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'trusted_account',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'asset_type',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'asset_code',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint32',\n      name: 'is_authorized',\n      id: 5\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarAccountMergeOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'destination_account',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarManageDataOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'key',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'value',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarBumpSequenceOp',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'source_account',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'bump_to',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'StellarSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'public_key',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TezosGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TezosAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TezosGetPublicKey',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TezosPublicKey',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'public_key',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TezosSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'branch',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TezosRevealOp',\n      name: 'reveal',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TezosTransactionOp',\n      name: 'transaction',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TezosOriginationOp',\n      name: 'origination',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TezosDelegationOp',\n      name: 'delegation',\n      id: 6\n    }],\n    enums: [],\n    messages: [{\n      name: 'TezosContractID',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'TezosContractType',\n        name: 'tag',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'hash',\n        id: 2\n      }],\n      enums: [{\n        name: 'TezosContractType',\n        values: [{\n          name: 'Implicit',\n          id: 0\n        }, {\n          name: 'Originated',\n          id: 1\n        }],\n        options: {}\n      }],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'TezosRevealOp',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'TezosContractID',\n        name: 'source',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'counter',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'gas_limit',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'storage_limit',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'public_key',\n        id: 6\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'TezosTransactionOp',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'TezosContractID',\n        name: 'source',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'counter',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'gas_limit',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'storage_limit',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'amount',\n        id: 6\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TezosContractID',\n        name: 'destination',\n        id: 7\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'parameters',\n        id: 8\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'TezosOriginationOp',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'TezosContractID',\n        name: 'source',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'counter',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'gas_limit',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'storage_limit',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'manager_pubkey',\n        id: 6\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'balance',\n        id: 7\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bool',\n        name: 'spendable',\n        id: 8\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bool',\n        name: 'delegatable',\n        id: 9\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'delegate',\n        id: 10\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'script',\n        id: 11\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }, {\n      name: 'TezosDelegationOp',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'TezosContractID',\n        name: 'source',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'fee',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'counter',\n        id: 3\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'gas_limit',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'uint64',\n        name: 'storage_limit',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'bytes',\n        name: 'delegate',\n        id: 6\n      }],\n      enums: [],\n      messages: [],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TezosSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'sig_op_contents',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'operation_hash',\n      id: 3\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TronGetAddress',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'show_display',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TronAddress',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'address',\n      id: 1\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TronSignTx',\n    fields: [{\n      rule: 'repeated',\n      options: {},\n      type: 'uint32',\n      name: 'address_n',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'ref_block_bytes',\n      id: 2\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'ref_block_hash',\n      id: 3\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'expiration',\n      id: 4\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'string',\n      name: 'data',\n      id: 5\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'TronContract',\n      name: 'contract',\n      id: 6\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'uint64',\n      name: 'timestamp',\n      id: 7\n    }],\n    enums: [],\n    messages: [{\n      name: 'TronContract',\n      fields: [{\n        rule: 'optional',\n        options: {},\n        type: 'TronTransferContract',\n        name: 'transfer_contract',\n        id: 1\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronTransferAssetContract',\n        name: 'transfer_asset_contract',\n        id: 2\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronVoteWitnessContract',\n        name: 'vote_witness_contract',\n        id: 4\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronWitnessCreateContract',\n        name: 'witness_create_contract',\n        id: 5\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronAssetIssueContract',\n        name: 'asset_issue_contract',\n        id: 6\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronWitnessUpdateContract',\n        name: 'witness_update_contract',\n        id: 8\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronParticipateAssetIssueContract',\n        name: 'participate_asset_issue_contract',\n        id: 9\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronAccountUpdateContract',\n        name: 'account_update_contract',\n        id: 10\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronFreezeBalanceContract',\n        name: 'freeze_balance_contract',\n        id: 11\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronUnfreezeBalanceContract',\n        name: 'unfreeze_balance_contract',\n        id: 12\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronWithdrawBalanceContract',\n        name: 'withdraw_balance_contract',\n        id: 13\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronUnfreezeAssetContract',\n        name: 'unfreeze_asset_contract',\n        id: 14\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronUpdateAssetContract',\n        name: 'update_asset_contract',\n        id: 15\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronProposalCreateContract',\n        name: 'proposal_create_contract',\n        id: 16\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronProposalApproveContract',\n        name: 'proposal_approve_contract',\n        id: 17\n      }, {\n        rule: 'optional',\n        options: {},\n        type: 'TronProposalDeleteContract',\n        name: 'proposal_delete_contract',\n        id: 18\n      }],\n      enums: [],\n      messages: [{\n        name: 'TronAccountUpdateContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'account_name',\n          id: 1\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronTransferContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'to_address',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'amount',\n          id: 2\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronTransferAssetContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'asset_name',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'to_address',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'amount',\n          id: 3\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronVoteWitnessContract',\n        fields: [{\n          rule: 'repeated',\n          options: {},\n          type: 'TronVote',\n          name: 'votes',\n          id: 1\n        }],\n        enums: [],\n        messages: [{\n          name: 'TronVote',\n          fields: [{\n            rule: 'optional',\n            options: {},\n            type: 'bytes',\n            name: 'vote_address',\n            id: 1\n          }, {\n            rule: 'optional',\n            options: {},\n            type: 'uint64',\n            name: 'vote_count',\n            id: 2\n          }],\n          enums: [],\n          messages: [],\n          options: {},\n          oneofs: {}\n        }],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronWitnessCreateContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'url',\n          id: 1\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronWitnessUpdateContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'update_url',\n          id: 2\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronAssetIssueContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'name',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'abbr',\n          id: 3\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'total_supply',\n          id: 4\n        }, {\n          rule: 'repeated',\n          options: {},\n          type: 'TronFrozenSupply',\n          name: 'frozen_supply',\n          id: 5\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'trx_num',\n          id: 6\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint32',\n          name: 'num',\n          id: 7\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'start_time',\n          id: 8\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'end_time',\n          id: 9\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'description',\n          id: 10\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'url',\n          id: 11\n        }],\n        enums: [],\n        messages: [{\n          name: 'TronFrozenSupply',\n          fields: [{\n            rule: 'optional',\n            options: {},\n            type: 'uint64',\n            name: 'frozen_amount',\n            id: 1\n          }, {\n            rule: 'optional',\n            options: {},\n            type: 'uint64',\n            name: 'frozen_days',\n            id: 2\n          }],\n          enums: [],\n          messages: [],\n          options: {},\n          oneofs: {}\n        }],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronParticipateAssetIssueContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'bytes',\n          name: 'to_address',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'asset_name',\n          id: 2\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'amount',\n          id: 3\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronFreezeBalanceContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'frozen_balance',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'frozen_duration',\n          id: 2\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronUnfreezeBalanceContract',\n        fields: [],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronUnfreezeAssetContract',\n        fields: [],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronWithdrawBalanceContract',\n        fields: [],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronUpdateAssetContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'description',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'string',\n          name: 'url',\n          id: 2\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronProposalCreateContract',\n        fields: [{\n          rule: 'repeated',\n          options: {},\n          type: 'TronProposalParameters',\n          name: 'parameters',\n          id: 1\n        }],\n        enums: [],\n        messages: [{\n          name: 'TronProposalParameters',\n          fields: [{\n            rule: 'optional',\n            options: {},\n            type: 'uint64',\n            name: 'key',\n            id: 1\n          }, {\n            rule: 'optional',\n            options: {},\n            type: 'uint64',\n            name: 'value',\n            id: 2\n          }],\n          enums: [],\n          messages: [],\n          options: {},\n          oneofs: {}\n        }],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronProposalApproveContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'proposal_id',\n          id: 1\n        }, {\n          rule: 'optional',\n          options: {},\n          type: 'bool',\n          name: 'is_add_approval',\n          id: 2\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }, {\n        name: 'TronProposalDeleteContract',\n        fields: [{\n          rule: 'optional',\n          options: {},\n          type: 'uint64',\n          name: 'proposal_id',\n          id: 1\n        }],\n        enums: [],\n        messages: [],\n        options: {},\n        oneofs: {}\n      }],\n      options: {},\n      oneofs: {}\n    }],\n    options: {},\n    oneofs: {}\n  }, {\n    name: 'TronSignedTx',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'signature',\n      id: 1\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bytes',\n      name: 'serialized_tx',\n      id: 2\n    }],\n    enums: [],\n    messages: [],\n    options: {},\n    oneofs: {}\n  }, {\n    ref: 'google.protobuf.EnumValueOptions',\n    fields: [{\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_in',\n      id: 50002\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_out',\n      id: 50003\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_debug_in',\n      id: 50004\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_debug_out',\n      id: 50005\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_tiny',\n      id: 50006\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_bootloader',\n      id: 50007\n    }, {\n      rule: 'optional',\n      options: {},\n      type: 'bool',\n      name: 'wire_no_fsm',\n      id: 50008\n    }]\n  }],\n  enums: [{\n    name: 'InputScriptType',\n    values: [{\n      name: 'SPENDADDRESS',\n      id: 0\n    }, {\n      name: 'SPENDMULTISIG',\n      id: 1\n    }, {\n      name: 'EXTERNAL',\n      id: 2\n    }, {\n      name: 'SPENDWITNESS',\n      id: 3\n    }, {\n      name: 'SPENDP2SHWITNESS',\n      id: 4\n    }],\n    options: {}\n  }, {\n    name: 'MessageType',\n    values: [{\n      name: 'MessageType_Initialize',\n      id: 0\n    }, {\n      name: 'MessageType_Ping',\n      id: 1\n    }, {\n      name: 'MessageType_Success',\n      id: 2\n    }, {\n      name: 'MessageType_Failure',\n      id: 3\n    }, {\n      name: 'MessageType_ChangePin',\n      id: 4\n    }, {\n      name: 'MessageType_WipeDevice',\n      id: 5\n    }, {\n      name: 'MessageType_GetEntropy',\n      id: 9\n    }, {\n      name: 'MessageType_Entropy',\n      id: 10\n    }, {\n      name: 'MessageType_LoadDevice',\n      id: 13\n    }, {\n      name: 'MessageType_ResetDevice',\n      id: 14\n    }, {\n      name: 'MessageType_Features',\n      id: 17\n    }, {\n      name: 'MessageType_PinMatrixRequest',\n      id: 18\n    }, {\n      name: 'MessageType_PinMatrixAck',\n      id: 19\n    }, {\n      name: 'MessageType_Cancel',\n      id: 20\n    }, {\n      name: 'MessageType_ClearSession',\n      id: 24\n    }, {\n      name: 'MessageType_ApplySettings',\n      id: 25\n    }, {\n      name: 'MessageType_ButtonRequest',\n      id: 26\n    }, {\n      name: 'MessageType_ButtonAck',\n      id: 27\n    }, {\n      name: 'MessageType_ApplyFlags',\n      id: 28\n    }, {\n      name: 'MessageType_BackupDevice',\n      id: 34\n    }, {\n      name: 'MessageType_EntropyRequest',\n      id: 35\n    }, {\n      name: 'MessageType_EntropyAck',\n      id: 36\n    }, {\n      name: 'MessageType_PassphraseRequest',\n      id: 41\n    }, {\n      name: 'MessageType_PassphraseAck',\n      id: 42\n    }, {\n      name: 'MessageType_PassphraseStateRequest',\n      id: 77\n    }, {\n      name: 'MessageType_PassphraseStateAck',\n      id: 78\n    }, {\n      name: 'MessageType_RecoveryDevice',\n      id: 45\n    }, {\n      name: 'MessageType_WordRequest',\n      id: 46\n    }, {\n      name: 'MessageType_WordAck',\n      id: 47\n    }, {\n      name: 'MessageType_GetFeatures',\n      id: 55\n    }, {\n      name: 'MessageType_SetU2FCounter',\n      id: 63\n    }, {\n      name: 'MessageType_FirmwareErase',\n      id: 6\n    }, {\n      name: 'MessageType_FirmwareUpload',\n      id: 7\n    }, {\n      name: 'MessageType_FirmwareRequest',\n      id: 8\n    }, {\n      name: 'MessageType_SelfTest',\n      id: 32\n    }, {\n      name: 'MessageType_GetPublicKey',\n      id: 11\n    }, {\n      name: 'MessageType_PublicKey',\n      id: 12\n    }, {\n      name: 'MessageType_SignTx',\n      id: 15\n    }, {\n      name: 'MessageType_TxRequest',\n      id: 21\n    }, {\n      name: 'MessageType_TxAck',\n      id: 22\n    }, {\n      name: 'MessageType_GetAddress',\n      id: 29\n    }, {\n      name: 'MessageType_Address',\n      id: 30\n    }, {\n      name: 'MessageType_SignMessage',\n      id: 38\n    }, {\n      name: 'MessageType_VerifyMessage',\n      id: 39\n    }, {\n      name: 'MessageType_MessageSignature',\n      id: 40\n    }, {\n      name: 'MessageType_CipherKeyValue',\n      id: 23\n    }, {\n      name: 'MessageType_CipheredKeyValue',\n      id: 48\n    }, {\n      name: 'MessageType_SignIdentity',\n      id: 53\n    }, {\n      name: 'MessageType_SignedIdentity',\n      id: 54\n    }, {\n      name: 'MessageType_GetECDHSessionKey',\n      id: 61\n    }, {\n      name: 'MessageType_ECDHSessionKey',\n      id: 62\n    }, {\n      name: 'MessageType_CosiCommit',\n      id: 71\n    }, {\n      name: 'MessageType_CosiCommitment',\n      id: 72\n    }, {\n      name: 'MessageType_CosiSign',\n      id: 73\n    }, {\n      name: 'MessageType_CosiSignature',\n      id: 74\n    }, {\n      name: 'MessageType_DebugLinkDecision',\n      id: 100\n    }, {\n      name: 'MessageType_DebugLinkGetState',\n      id: 101\n    }, {\n      name: 'MessageType_DebugLinkState',\n      id: 102\n    }, {\n      name: 'MessageType_DebugLinkStop',\n      id: 103\n    }, {\n      name: 'MessageType_DebugLinkLog',\n      id: 104\n    }, {\n      name: 'MessageType_DebugLinkMemoryRead',\n      id: 110\n    }, {\n      name: 'MessageType_DebugLinkMemory',\n      id: 111\n    }, {\n      name: 'MessageType_DebugLinkMemoryWrite',\n      id: 112\n    }, {\n      name: 'MessageType_DebugLinkFlashErase',\n      id: 113\n    }, {\n      name: 'MessageType_EthereumGetPublicKey',\n      id: 450\n    }, {\n      name: 'MessageType_EthereumPublicKey',\n      id: 451\n    }, {\n      name: 'MessageType_EthereumGetAddress',\n      id: 56\n    }, {\n      name: 'MessageType_EthereumAddress',\n      id: 57\n    }, {\n      name: 'MessageType_EthereumSignTx',\n      id: 58\n    }, {\n      name: 'MessageType_EthereumTxRequest',\n      id: 59\n    }, {\n      name: 'MessageType_EthereumTxAck',\n      id: 60\n    }, {\n      name: 'MessageType_EthereumSignMessage',\n      id: 64\n    }, {\n      name: 'MessageType_EthereumVerifyMessage',\n      id: 65\n    }, {\n      name: 'MessageType_EthereumMessageSignature',\n      id: 66\n    }, {\n      name: 'MessageType_NEMGetAddress',\n      id: 67\n    }, {\n      name: 'MessageType_NEMAddress',\n      id: 68\n    }, {\n      name: 'MessageType_NEMSignTx',\n      id: 69\n    }, {\n      name: 'MessageType_NEMSignedTx',\n      id: 70\n    }, {\n      name: 'MessageType_NEMDecryptMessage',\n      id: 75\n    }, {\n      name: 'MessageType_NEMDecryptedMessage',\n      id: 76\n    }, {\n      name: 'MessageType_LiskGetAddress',\n      id: 114\n    }, {\n      name: 'MessageType_LiskAddress',\n      id: 115\n    }, {\n      name: 'MessageType_LiskSignTx',\n      id: 116\n    }, {\n      name: 'MessageType_LiskSignedTx',\n      id: 117\n    }, {\n      name: 'MessageType_LiskSignMessage',\n      id: 118\n    }, {\n      name: 'MessageType_LiskMessageSignature',\n      id: 119\n    }, {\n      name: 'MessageType_LiskVerifyMessage',\n      id: 120\n    }, {\n      name: 'MessageType_LiskGetPublicKey',\n      id: 121\n    }, {\n      name: 'MessageType_LiskPublicKey',\n      id: 122\n    }, {\n      name: 'MessageType_TezosGetAddress',\n      id: 150\n    }, {\n      name: 'MessageType_TezosAddress',\n      id: 151\n    }, {\n      name: 'MessageType_TezosSignTx',\n      id: 152\n    }, {\n      name: 'MessageType_TezosSignedTx',\n      id: 153\n    }, {\n      name: 'MessageType_TezosGetPublicKey',\n      id: 154\n    }, {\n      name: 'MessageType_TezosPublicKey',\n      id: 155\n    }, {\n      name: 'MessageType_StellarSignTx',\n      id: 202\n    }, {\n      name: 'MessageType_StellarTxOpRequest',\n      id: 203\n    }, {\n      name: 'MessageType_StellarGetAddress',\n      id: 207\n    }, {\n      name: 'MessageType_StellarAddress',\n      id: 208\n    }, {\n      name: 'MessageType_StellarCreateAccountOp',\n      id: 210\n    }, {\n      name: 'MessageType_StellarPaymentOp',\n      id: 211\n    }, {\n      name: 'MessageType_StellarPathPaymentOp',\n      id: 212\n    }, {\n      name: 'MessageType_StellarManageOfferOp',\n      id: 213\n    }, {\n      name: 'MessageType_StellarCreatePassiveOfferOp',\n      id: 214\n    }, {\n      name: 'MessageType_StellarSetOptionsOp',\n      id: 215\n    }, {\n      name: 'MessageType_StellarChangeTrustOp',\n      id: 216\n    }, {\n      name: 'MessageType_StellarAllowTrustOp',\n      id: 217\n    }, {\n      name: 'MessageType_StellarAccountMergeOp',\n      id: 218\n    }, {\n      name: 'MessageType_StellarManageDataOp',\n      id: 220\n    }, {\n      name: 'MessageType_StellarBumpSequenceOp',\n      id: 221\n    }, {\n      name: 'MessageType_StellarSignedTx',\n      id: 230\n    }, {\n      name: 'MessageType_TronGetAddress',\n      id: 250\n    }, {\n      name: 'MessageType_TronAddress',\n      id: 251\n    }, {\n      name: 'MessageType_TronSignTx',\n      id: 252\n    }, {\n      name: 'MessageType_TronSignedTx',\n      id: 253\n    }, {\n      name: 'MessageType_CardanoSignTx',\n      id: 303\n    }, {\n      name: 'MessageType_CardanoTxRequest',\n      id: 304\n    }, {\n      name: 'MessageType_CardanoGetPublicKey',\n      id: 305\n    }, {\n      name: 'MessageType_CardanoPublicKey',\n      id: 306\n    }, {\n      name: 'MessageType_CardanoGetAddress',\n      id: 307\n    }, {\n      name: 'MessageType_CardanoAddress',\n      id: 308\n    }, {\n      name: 'MessageType_CardanoTxAck',\n      id: 309\n    }, {\n      name: 'MessageType_CardanoSignedTx',\n      id: 310\n    }, {\n      name: 'MessageType_OntologyGetAddress',\n      id: 350\n    }, {\n      name: 'MessageType_OntologyAddress',\n      id: 351\n    }, {\n      name: 'MessageType_OntologyGetPublicKey',\n      id: 352\n    }, {\n      name: 'MessageType_OntologyPublicKey',\n      id: 353\n    }, {\n      name: 'MessageType_OntologySignTransfer',\n      id: 354\n    }, {\n      name: 'MessageType_OntologySignedTransfer',\n      id: 355\n    }, {\n      name: 'MessageType_OntologySignWithdrawOng',\n      id: 356\n    }, {\n      name: 'MessageType_OntologySignedWithdrawOng',\n      id: 357\n    }, {\n      name: 'MessageType_OntologySignOntIdRegister',\n      id: 358\n    }, {\n      name: 'MessageType_OntologySignedOntIdRegister',\n      id: 359\n    }, {\n      name: 'MessageType_OntologySignOntIdAddAttributes',\n      id: 360\n    }, {\n      name: 'MessageType_OntologySignedOntIdAddAttributes',\n      id: 361\n    }, {\n      name: 'MessageType_RippleGetAddress',\n      id: 400\n    }, {\n      name: 'MessageType_RippleAddress',\n      id: 401\n    }, {\n      name: 'MessageType_RippleSignTx',\n      id: 402\n    }, {\n      name: 'MessageType_RippleSignedTx',\n      id: 403\n    }, {\n      name: 'MessageType_MoneroTransactionInitRequest',\n      id: 501\n    }, {\n      name: 'MessageType_MoneroTransactionInitAck',\n      id: 502\n    }, {\n      name: 'MessageType_MoneroTransactionSetInputRequest',\n      id: 503\n    }, {\n      name: 'MessageType_MoneroTransactionSetInputAck',\n      id: 504\n    }, {\n      name: 'MessageType_MoneroTransactionInputsPermutationRequest',\n      id: 505\n    }, {\n      name: 'MessageType_MoneroTransactionInputsPermutationAck',\n      id: 506\n    }, {\n      name: 'MessageType_MoneroTransactionInputViniRequest',\n      id: 507\n    }, {\n      name: 'MessageType_MoneroTransactionInputViniAck',\n      id: 508\n    }, {\n      name: 'MessageType_MoneroTransactionAllInputsSetRequest',\n      id: 509\n    }, {\n      name: 'MessageType_MoneroTransactionAllInputsSetAck',\n      id: 510\n    }, {\n      name: 'MessageType_MoneroTransactionSetOutputRequest',\n      id: 511\n    }, {\n      name: 'MessageType_MoneroTransactionSetOutputAck',\n      id: 512\n    }, {\n      name: 'MessageType_MoneroTransactionAllOutSetRequest',\n      id: 513\n    }, {\n      name: 'MessageType_MoneroTransactionAllOutSetAck',\n      id: 514\n    }, {\n      name: 'MessageType_MoneroTransactionSignInputRequest',\n      id: 515\n    }, {\n      name: 'MessageType_MoneroTransactionSignInputAck',\n      id: 516\n    }, {\n      name: 'MessageType_MoneroTransactionFinalRequest',\n      id: 517\n    }, {\n      name: 'MessageType_MoneroTransactionFinalAck',\n      id: 518\n    }, {\n      name: 'MessageType_MoneroKeyImageExportInitRequest',\n      id: 530\n    }, {\n      name: 'MessageType_MoneroKeyImageExportInitAck',\n      id: 531\n    }, {\n      name: 'MessageType_MoneroKeyImageSyncStepRequest',\n      id: 532\n    }, {\n      name: 'MessageType_MoneroKeyImageSyncStepAck',\n      id: 533\n    }, {\n      name: 'MessageType_MoneroKeyImageSyncFinalRequest',\n      id: 534\n    }, {\n      name: 'MessageType_MoneroKeyImageSyncFinalAck',\n      id: 535\n    }, {\n      name: 'MessageType_MoneroGetAddress',\n      id: 540\n    }, {\n      name: 'MessageType_MoneroAddress',\n      id: 541\n    }, {\n      name: 'MessageType_MoneroGetWatchKey',\n      id: 542\n    }, {\n      name: 'MessageType_MoneroWatchKey',\n      id: 543\n    }, {\n      name: 'MessageType_DebugMoneroDiagRequest',\n      id: 546\n    }, {\n      name: 'MessageType_DebugMoneroDiagAck',\n      id: 547\n    }, {\n      name: 'MessageType_MoneroGetTxKeyRequest',\n      id: 550\n    }, {\n      name: 'MessageType_MoneroGetTxKeyAck',\n      id: 551\n    }, {\n      name: 'MessageType_MoneroLiveRefreshStartRequest',\n      id: 552\n    }, {\n      name: 'MessageType_MoneroLiveRefreshStartAck',\n      id: 553\n    }, {\n      name: 'MessageType_MoneroLiveRefreshStepRequest',\n      id: 554\n    }, {\n      name: 'MessageType_MoneroLiveRefreshStepAck',\n      id: 555\n    }, {\n      name: 'MessageType_MoneroLiveRefreshFinalRequest',\n      id: 556\n    }, {\n      name: 'MessageType_MoneroLiveRefreshFinalAck',\n      id: 557\n    }, {\n      name: 'MessageType_EosGetPublicKey',\n      id: 600\n    }, {\n      name: 'MessageType_EosPublicKey',\n      id: 601\n    }, {\n      name: 'MessageType_EosSignTx',\n      id: 602\n    }, {\n      name: 'MessageType_EosTxActionRequest',\n      id: 603\n    }, {\n      name: 'MessageType_EosTxActionAck',\n      id: 604\n    }, {\n      name: 'MessageType_EosSignedTx',\n      id: 605\n    }],\n    options: {}\n  }],\n  imports: [],\n  options: {},\n  services: []\n});\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/root/MyCrypto/shared/enclave/server/wallets/msg-config.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}