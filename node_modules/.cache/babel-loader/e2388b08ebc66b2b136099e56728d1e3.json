{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal[\"default\"].signature : function (a) {\n  return a;\n};\n\nimport { BrowserWindow, ipcMain } from 'electron';\nexport default function showPrompt(template, event) {\n  return new Promise(function (resolve, reject) {\n    var scriptNonce = Math.floor(Math.random() * 1000000000000);\n    var html = template.replace(/\\$scriptNonce/g, scriptNonce.toString()).replace(/\\$EVENT/g, event);\n    var hasResolved = false;\n    var window = new BrowserWindow({\n      width: 320,\n      height: 380,\n      frame: false,\n      backgroundColor: '#21252B',\n      darkTheme: true\n    });\n    window.on('closed', function () {\n      if (hasResolved) {\n        return;\n      }\n\n      reject(new Error('ENCLAVE_TREZOR_CANCELED'));\n    });\n    ipcMain.once(event, function (_, value) {\n      try {\n        resolve(value);\n        hasResolved = true;\n        window.close();\n      } catch (e) {\n        /**\n         * @desc The window.close call sometimes fails\n         *  if the window has already been destroyed.\n         */\n        console.error(e);\n      }\n    });\n    window.loadURL(\"data:text/html;charset=UTF-8,\".concat(encodeURIComponent(html)));\n    window.show();\n    window.focus();\n  });\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(showPrompt, \"showPrompt\", \"/root/MyCrypto/shared/enclave/server/views/showPrompt.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}