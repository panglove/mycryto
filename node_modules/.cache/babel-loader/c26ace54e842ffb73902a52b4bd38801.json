{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal[\"default\"].signature : function (a) {\n  return a;\n};\n\nimport EthTx from 'ethereumjs-tx';\nimport { addHexPrefix, toBuffer } from 'ethereumjs-util';\nimport TransportNodeHid from '@ledgerhq/hw-transport-node-hid-noevents';\nimport LedgerEth from '@ledgerhq/hw-app-eth';\nimport { byContractAddress } from '@ledgerhq/hw-app-eth/erc20';\nvar transport;\n\nfunction getEthApp() {\n  return _getEthApp.apply(this, arguments);\n}\n\nfunction _getEthApp() {\n  _getEthApp = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (transport) {\n              _context5.next = 6;\n              break;\n            }\n\n            _context5.next = 4;\n            return TransportNodeHid.create();\n\n          case 4:\n            transport = _context5.sent;\n            transport.on('disconnect', function () {\n              return transport = null;\n            });\n\n          case 6:\n            return _context5.abrupt(\"return\", new LedgerEth(transport));\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n\n            if (!(_context5.t0 && _context5.t0.name === 'TransportError')) {\n              _context5.next = 13;\n              break;\n            }\n\n            throw new Error('ENCLAVE_LEDGER_IN_USE');\n\n          case 13:\n            if (!(_context5.t0 && _context5.t0.message && _context5.t0.message.includes('cannot open device with path'))) {\n              _context5.next = 15;\n              break;\n            }\n\n            throw new Error('ENCLAVE_LEDGER_IN_USE');\n\n          case 15:\n            throw _context5.t0;\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 9]]);\n  }));\n  return _getEthApp.apply(this, arguments);\n}\n\nvar Ledger = {\n  getChainCode: function () {\n    var _getChainCode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(dpath) {\n      var app, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getEthApp();\n\n            case 2:\n              app = _context.sent;\n              _context.prev = 3;\n              _context.next = 6;\n              return app.getAddress(dpath, false, true);\n\n            case 6:\n              res = _context.sent;\n              return _context.abrupt(\"return\", {\n                publicKey: res.publicKey,\n                chainCode: res.chainCode\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('Failed to get chain code from ledger:', _context.t0);\n              throw new Error('ENCLAVE_LEDGER_FAIL');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    function getChainCode(_x) {\n      return _getChainCode.apply(this, arguments);\n    }\n\n    return getChainCode;\n  }(),\n  signTransaction: function () {\n    var _signTransaction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(tx, path) {\n      var app, ethTx, tokenInfo, rsv, signedTx;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getEthApp();\n\n            case 2:\n              app = _context2.sent;\n              ethTx = new EthTx(_objectSpread({}, tx, {\n                v: Buffer.from([tx.chainId]),\n                r: toBuffer(0),\n                s: toBuffer(0)\n              }));\n\n              if (!(ethTx.getChainId() === 1)) {\n                _context2.next = 9;\n                break;\n              }\n\n              tokenInfo = byContractAddress(ethTx.to.toString('hex'));\n\n              if (!tokenInfo) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 9;\n              return app.provideERC20TokenInformation(tokenInfo);\n\n            case 9:\n              _context2.next = 11;\n              return app.signTransaction(path, ethTx.serialize().toString('hex'));\n\n            case 11:\n              rsv = _context2.sent;\n              signedTx = new EthTx(_objectSpread({}, tx, {\n                r: addHexPrefix(rsv.r),\n                s: addHexPrefix(rsv.s),\n                v: addHexPrefix(rsv.v)\n              }));\n              return _context2.abrupt(\"return\", {\n                signedTransaction: signedTx.serialize().toString('hex')\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signTransaction(_x2, _x3) {\n      return _signTransaction.apply(this, arguments);\n    }\n\n    return signTransaction;\n  }(),\n  signMessage: function () {\n    var _signMessage = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(msg, path) {\n      var app, msgHex, signed, combined;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getEthApp();\n\n            case 2:\n              app = _context3.sent;\n              msgHex = Buffer.from(msg).toString('hex');\n              _context3.next = 6;\n              return app.signPersonalMessage(path, msgHex);\n\n            case 6:\n              signed = _context3.sent;\n              combined = addHexPrefix(signed.r + signed.s + signed.v.toString(16));\n              return _context3.abrupt(\"return\", {\n                signedMessage: combined\n              });\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function signMessage(_x4, _x5) {\n      return _signMessage.apply(this, arguments);\n    }\n\n    return signMessage;\n  }(),\n  displayAddress: function () {\n    var _displayAddress = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(path) {\n      var app;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return getEthApp();\n\n            case 3:\n              app = _context4.sent;\n              _context4.next = 6;\n              return app.getAddress(path, true, false);\n\n            case 6:\n              return _context4.abrupt(\"return\", {\n                success: true\n              });\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", {\n                success: false\n              });\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 9]]);\n    }));\n\n    function displayAddress(_x6) {\n      return _displayAddress.apply(this, arguments);\n    }\n\n    return displayAddress;\n  }()\n};\nvar _default = Ledger;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(transport, \"transport\", \"/root/MyCrypto/shared/enclave/server/wallets/ledger.ts\");\n  reactHotLoader.register(getEthApp, \"getEthApp\", \"/root/MyCrypto/shared/enclave/server/wallets/ledger.ts\");\n  reactHotLoader.register(Ledger, \"Ledger\", \"/root/MyCrypto/shared/enclave/server/wallets/ledger.ts\");\n  reactHotLoader.register(_default, \"default\", \"/root/MyCrypto/shared/enclave/server/wallets/ledger.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}